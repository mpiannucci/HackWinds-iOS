// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   station/v1
// Description:
//   This is an API

#import "GTLRStationObjects.h"

// ----------------------------------------------------------------------------
// Constants

// GTLRStation_ApiApiMessagesMeasurementLabelMessage.measurement
NSString * const kGTLRStation_ApiApiMessagesMeasurementLabelMessage_Measurement_Direction = @"DIRECTION";
NSString * const kGTLRStation_ApiApiMessagesMeasurementLabelMessage_Measurement_Length = @"LENGTH";
NSString * const kGTLRStation_ApiApiMessagesMeasurementLabelMessage_Measurement_Pressure = @"PRESSURE";
NSString * const kGTLRStation_ApiApiMessagesMeasurementLabelMessage_Measurement_Speed = @"SPEED";
NSString * const kGTLRStation_ApiApiMessagesMeasurementLabelMessage_Measurement_Temperature = @"TEMPERATURE";
NSString * const kGTLRStation_ApiApiMessagesMeasurementLabelMessage_Measurement_Visibility = @"VISIBILITY";

// GTLRStation_ApiApiMessagesUnitLabelMessage.unit
NSString * const kGTLRStation_ApiApiMessagesUnitLabelMessage_Unit_English = @"ENGLISH";
NSString * const kGTLRStation_ApiApiMessagesUnitLabelMessage_Unit_Metric = @"METRIC";

// ----------------------------------------------------------------------------
//
//   GTLRStation_ApiApiMessagesDataMessage
//

@implementation GTLRStation_ApiApiMessagesDataMessage
@dynamic airTemperature, averagePeriod, date, dewpointTemperature,
         directionSpectraPlot, energySpectraPlot, pressure, pressureTendency,
         steepness, swellComponents, units, waterLevel, waterTemperature,
         waveSpectra, waveSummary, windCompassDirection, windDirection,
         windGust, windSpeed;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"airTemperature" : @"air_temperature",
    @"averagePeriod" : @"average_period",
    @"dewpointTemperature" : @"dewpoint_temperature",
    @"directionSpectraPlot" : @"direction_spectra_plot",
    @"energySpectraPlot" : @"energy_spectra_plot",
    @"pressureTendency" : @"pressure_tendency",
    @"swellComponents" : @"swell_components",
    @"waterLevel" : @"water_level",
    @"waterTemperature" : @"water_temperature",
    @"waveSpectra" : @"wave_spectra",
    @"waveSummary" : @"wave_summary",
    @"windCompassDirection" : @"wind_compass_direction",
    @"windDirection" : @"wind_direction",
    @"windGust" : @"wind_gust",
    @"windSpeed" : @"wind_speed"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"swell_components" : [GTLRStation_ApiApiMessagesSwellMessage class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStation_ApiApiMessagesLocationMessage
//

@implementation GTLRStation_ApiApiMessagesLocationMessage
@dynamic altitude, latitude, longitude, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStation_ApiApiMessagesMeasurementLabelMessage
//

@implementation GTLRStation_ApiApiMessagesMeasurementLabelMessage
@dynamic label, measurement;
@end


// ----------------------------------------------------------------------------
//
//   GTLRStation_ApiApiMessagesPlotMessage
//

@implementation GTLRStation_ApiApiMessagesPlotMessage
@dynamic plot, stationId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"stationId" : @"station_id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStation_ApiApiMessagesStationMessage
//

@implementation GTLRStation_ApiApiMessagesStationMessage
@dynamic active, currents, dart, data, location, name, owner, program,
         stationId, stationType, waterQuality;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"stationId" : @"station_id",
    @"stationType" : @"station_type",
    @"waterQuality" : @"water_quality"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRStation_ApiApiMessagesDataMessage class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStation_ApiApiMessagesStationsMessage
//

@implementation GTLRStation_ApiApiMessagesStationsMessage
@dynamic fetchDate, stations;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"fetchDate" : @"fetch_date" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"stations" : [GTLRStation_ApiApiMessagesStationMessage class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStation_ApiApiMessagesSwellMessage
//

@implementation GTLRStation_ApiApiMessagesSwellMessage
@dynamic compassDirection, direction, period, unit, waveHeight;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"compassDirection" : @"compass_direction",
    @"waveHeight" : @"wave_height"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStation_ApiApiMessagesUnitLabelMessage
//

@implementation GTLRStation_ApiApiMessagesUnitLabelMessage
@dynamic measurements, unit;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"measurements" : [GTLRStation_ApiApiMessagesMeasurementLabelMessage class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRStation_ApiApiMessagesWaveSpectraMessage
//

@implementation GTLRStation_ApiApiMessagesWaveSpectraMessage
@dynamic angle, energy, frequency, seperationFrequency;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"seperationFrequency" : @"seperation_frequency" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"angle" : [NSNumber class],
    @"energy" : [NSNumber class],
    @"frequency" : [NSNumber class]
  };
  return map;
}

@end
